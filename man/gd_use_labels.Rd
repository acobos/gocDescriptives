% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gd_use_labels.R
\name{gd_use_labels}
\alias{gd_use_labels}
\title{Replaces Variable names by their labels in dataframes with descriptive results}
\usage{
gd_use_labels(df, vars_df, var_name = "var_name", var_label = "var_label")
}
\arguments{
\item{df}{A dataframe with decriptive results.}

\item{var_name}{\code{character} The name of the column in \code{var_df} that
contains variable names.}

\item{var_label}{\code{character} The name of the column in \code{var_df} that
contains variable labels.}

\item{var_df}{A second dataframe containing variable names and variable 
labels in separate columns.}
}
\value{
\code{dataframe} similar to \code{df}, with variable names replaced 
by their labels as defined in \code{var_df}.
}
\description{
Replaces variable names by their labels, in dataframes with descriptive 
results. For this function to work, it is required that:  
1) the dataframe with descriptive results has a \code{Variable} column, 
containing variable names, and  
2) A second dataframe must exist, containing variable names and variable 
labels in separate columns (with arbitrary names).
Dataframes obtained from the descriptive functions in the 
`gocDescriptives` package, always have column \code{Variable} containing
variable names, and therefore comply with condition 1 above. Regarding 
condition 2, see Details.
}
\examples{
# Example data
set.seed(123) 
Sex <- sample(c("Male", "Female"), 100, replace=TRUE)
Age <- floor(sample(50 + 10 * rnorm(100)))
Pulse <- floor(sample(80 + 10 * rnorm(100)))
DM <- sample(c("No", "Type 1", "Type 2"), 100, replace=TRUE)
dat <- data.frame(Sex, Age, Pulse, DM, stringsAsFactors = FALSE)

# Example dataframe with vars info
vars <- data.frame(v_names = c("Sex", "Age", "Pulse", "DM"),
                   v_labels = c(NA, "Age (years)",
                                "Pulse (bpm)", "Diabetes Mellitus"),
                   stringsAsFactors = FALSE)


# Describe dataframe dat
gd_df(dat) -> results
# Substitute Variable names by labels
gd_use_labels(df = results,
              vars_df = vars,
              var_name = "v_names",
              var_label = "v_labels")
              
# Same as above in one step
gd_use_labels(df = gd_df(dat),
              vars_df = vars,
              var_name = "v_names",
              var_label = "v_labels")
              
# Same as above using pipes
library(dplyr)
dat \%>\%
    gd_df() \%>\%
    gd_use_labels(vars_df = vars,
                  var_name = "v_names",
                  var_label = "v_labels")

}
